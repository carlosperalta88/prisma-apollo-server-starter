/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import { Context } from "./../context"
import { core } from "nexus"
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    date<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "DateTime";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    date<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "DateTime";
  }
}


declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  MediaInput: { // input type
    url: string; // String!
  }
  MediaTypeInput: { // input type
    name: string; // String!
  }
  ProductTypeInput: { // input type
    name: string; // String!
  }
  ProductsInput: { // input type
    description: string; // String!
    id?: number | null; // Int
    media?: Array<NexusGenInputs['MediaInput'] | null> | null; // [MediaInput]
    name: string; // String!
    price: number; // Int!
    subscriptionTypeId?: number | null; // Int
    typeId?: number | null; // Int
    version: string; // String!
  }
  SubscriptionTypeInput: { // input type
    name: string; // String!
    price?: number | null; // Int
  }
  SubscriptionsInput: { // input type
    active?: boolean | null; // Boolean
    subscriptionTypeId: number; // Int!
    userId: number; // Int!
  }
  UserStatusInput: { // input type
    name: string; // String!
  }
  UsersInput: { // input type
    active?: boolean | null; // Boolean
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    dob?: string | null; // String
    email: string; // String!
    firstName?: string | null; // String
    lastName?: string | null; // String
    phone: number; // Int!
    products?: Array<NexusGenInputs['ProductsInput'] | null> | null; // [ProductsInput]
    status?: NexusGenInputs['UserStatusInput'] | null; // UserStatusInput
    statusId?: number | null; // Int
    subscriptions?: NexusGenInputs['SubscriptionsInput'] | null; // SubscriptionsInput
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
}

export interface NexusGenEnums {
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  DateTime: any
}

export interface NexusGenObjects {
  Media: { // root type
    url: string; // String!
  }
  MediaType: { // root type
    id: number; // Int!
    name?: string | null; // String
  }
  Mutation: {};
  ProductType: { // root type
    id: number; // Int!
    name?: string | null; // String
  }
  Products: { // root type
    active?: boolean | null; // Boolean
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    description: string; // String!
    id: number; // Int!
    media?: Array<NexusGenRootTypes['Media'] | null> | null; // [Media]
    name: string; // String!
    price?: number | null; // Int
    subscriptionTypeId?: number | null; // Int
    typeId?: number | null; // Int
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    users?: Array<NexusGenRootTypes['Users'] | null> | null; // [Users]
    version?: string | null; // String
  }
  Query: {};
  SubscriptionType: { // root type
    id: number; // Int!
    name?: string | null; // String
    price?: number | null; // Int
  }
  Subscriptions: { // root type
    active?: boolean | null; // Boolean
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    subscriptionTypeId?: number | null; // Int
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    userId?: number | null; // Int
  }
  UserStatus: { // root type
    id: number; // Int!
    name?: string | null; // String
  }
  Users: { // root type
    active?: boolean | null; // Boolean
    dob?: string | null; // String
    email: string; // String!
    firstName?: string | null; // String
    id: number; // Int!
    lastName?: string | null; // String
    phone?: number | null; // Int
    products?: Array<NexusGenRootTypes['Products'] | null> | null; // [Products]
    statusId?: number | null; // Int
    subscriptions?: NexusGenRootTypes['Subscriptions'] | null; // Subscriptions
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars

export interface NexusGenFieldTypes {
  Media: { // field return type
    url: string; // String!
  }
  MediaType: { // field return type
    id: number; // Int!
    name: string | null; // String
  }
  Mutation: { // field return type
    addMediaType: NexusGenRootTypes['MediaType']; // MediaType!
    addProductType: NexusGenRootTypes['ProductType']; // ProductType!
    addSubscriptionType: NexusGenRootTypes['SubscriptionType']; // SubscriptionType!
    addUserStatus: NexusGenRootTypes['UserStatus']; // UserStatus!
    createProduct: NexusGenRootTypes['Products'] | null; // Products
    createSubscription: NexusGenRootTypes['Subscriptions']; // Subscriptions!
    createUser: NexusGenRootTypes['Users']; // Users!
    productPurchasedByUser: NexusGenRootTypes['Users']; // Users!
    updateUser: NexusGenRootTypes['Users']; // Users!
  }
  ProductType: { // field return type
    id: number; // Int!
    name: string | null; // String
  }
  Products: { // field return type
    active: boolean | null; // Boolean
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    description: string; // String!
    id: number; // Int!
    media: Array<NexusGenRootTypes['Media'] | null> | null; // [Media]
    name: string; // String!
    price: number | null; // Int
    subscriptionType: NexusGenRootTypes['SubscriptionType'] | null; // SubscriptionType
    subscriptionTypeId: number | null; // Int
    type: NexusGenRootTypes['ProductType'] | null; // ProductType
    typeId: number | null; // Int
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    users: Array<NexusGenRootTypes['Users'] | null> | null; // [Users]
    version: string | null; // String
  }
  Query: { // field return type
    allUsers: Array<NexusGenRootTypes['Users'] | null> | null; // [Users]
    getAllProducts: Array<NexusGenRootTypes['Products'] | null> | null; // [Products]
    getAllSubscriptions: Array<NexusGenRootTypes['Subscriptions'] | null> | null; // [Subscriptions]
    productById: NexusGenRootTypes['Products'] | null; // Products
    userById: NexusGenRootTypes['Users'] | null; // Users
  }
  SubscriptionType: { // field return type
    id: number; // Int!
    name: string | null; // String
    price: number | null; // Int
  }
  Subscriptions: { // field return type
    active: boolean | null; // Boolean
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    subscriptionTypeId: number | null; // Int
    type: NexusGenRootTypes['SubscriptionType'] | null; // SubscriptionType
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    userId: number | null; // Int
    users: NexusGenRootTypes['Users'] | null; // Users
  }
  UserStatus: { // field return type
    id: number; // Int!
    name: string | null; // String
  }
  Users: { // field return type
    active: boolean | null; // Boolean
    dob: string | null; // String
    email: string; // String!
    firstName: string | null; // String
    id: number; // Int!
    lastName: string | null; // String
    phone: number | null; // Int
    products: Array<NexusGenRootTypes['Products'] | null> | null; // [Products]
    status: NexusGenRootTypes['UserStatus'] | null; // UserStatus
    statusId: number | null; // Int
    subscriptions: NexusGenRootTypes['Subscriptions'] | null; // Subscriptions
  }
}

export interface NexusGenFieldTypeNames {
  Media: { // field return type name
    url: 'String'
  }
  MediaType: { // field return type name
    id: 'Int'
    name: 'String'
  }
  Mutation: { // field return type name
    addMediaType: 'MediaType'
    addProductType: 'ProductType'
    addSubscriptionType: 'SubscriptionType'
    addUserStatus: 'UserStatus'
    createProduct: 'Products'
    createSubscription: 'Subscriptions'
    createUser: 'Users'
    productPurchasedByUser: 'Users'
    updateUser: 'Users'
  }
  ProductType: { // field return type name
    id: 'Int'
    name: 'String'
  }
  Products: { // field return type name
    active: 'Boolean'
    createdAt: 'DateTime'
    description: 'String'
    id: 'Int'
    media: 'Media'
    name: 'String'
    price: 'Int'
    subscriptionType: 'SubscriptionType'
    subscriptionTypeId: 'Int'
    type: 'ProductType'
    typeId: 'Int'
    updatedAt: 'DateTime'
    users: 'Users'
    version: 'String'
  }
  Query: { // field return type name
    allUsers: 'Users'
    getAllProducts: 'Products'
    getAllSubscriptions: 'Subscriptions'
    productById: 'Products'
    userById: 'Users'
  }
  SubscriptionType: { // field return type name
    id: 'Int'
    name: 'String'
    price: 'Int'
  }
  Subscriptions: { // field return type name
    active: 'Boolean'
    createdAt: 'DateTime'
    id: 'Int'
    subscriptionTypeId: 'Int'
    type: 'SubscriptionType'
    updatedAt: 'DateTime'
    userId: 'Int'
    users: 'Users'
  }
  UserStatus: { // field return type name
    id: 'Int'
    name: 'String'
  }
  Users: { // field return type name
    active: 'Boolean'
    dob: 'String'
    email: 'String'
    firstName: 'String'
    id: 'Int'
    lastName: 'String'
    phone: 'Int'
    products: 'Products'
    status: 'UserStatus'
    statusId: 'Int'
    subscriptions: 'Subscriptions'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    addMediaType: { // args
      data: NexusGenInputs['MediaTypeInput']; // MediaTypeInput!
    }
    addProductType: { // args
      data: NexusGenInputs['ProductTypeInput']; // ProductTypeInput!
    }
    addSubscriptionType: { // args
      data: NexusGenInputs['SubscriptionTypeInput']; // SubscriptionTypeInput!
    }
    addUserStatus: { // args
      data: NexusGenInputs['UserStatusInput']; // UserStatusInput!
    }
    createProduct: { // args
      data: NexusGenInputs['ProductsInput']; // ProductsInput!
    }
    createSubscription: { // args
      data: NexusGenInputs['SubscriptionsInput']; // SubscriptionsInput!
    }
    createUser: { // args
      data: NexusGenInputs['UsersInput']; // UsersInput!
    }
    productPurchasedByUser: { // args
      productId?: number | null; // Int
      userId?: number | null; // Int
    }
    updateUser: { // args
      data: NexusGenInputs['UsersInput']; // UsersInput!
    }
  }
  Query: {
    allUsers: { // args
      id?: number | null; // Int
      skip?: number | null; // Int
      take?: number | null; // Int
    }
    getAllProducts: { // args
      id?: number | null; // Int
      skip?: number | null; // Int
      take?: number | null; // Int
    }
    getAllSubscriptions: { // args
      active?: boolean | null; // Boolean
    }
    productById: { // args
      id?: number | null; // Int
    }
    userById: { // args
      id?: number | null; // Int
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}